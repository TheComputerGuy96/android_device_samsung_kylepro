From 4c34607d436bd9bd8264055f91b53c39b4b9cf3c Mon Sep 17 00:00:00 2001
From: Dave Burke <daveburke@google.com>
Date: Wed, 24 Oct 2012 17:30:31 -0700
Subject: [PATCH 1/8] Revert "Revert "put back the unused virtuals in
 Vector<>""

This reverts commit 225c66a48cdc3acef21ee380dc134449749d3cb3

Change-Id: If31a04b81052cbc7dd7bf237c07107c33066d03d
---
 include/utils/VectorImpl.h | 20 ++++++++++++++++++++
 libutils/VectorImpl.cpp    | 19 +++++++++++++++++++
 2 files changed, 39 insertions(+)

diff --git a/include/utils/VectorImpl.h b/include/utils/VectorImpl.h
index 21ad71c..9bc50e6 100644
--- a/include/utils/VectorImpl.h
+++ b/include/utils/VectorImpl.h
@@ -105,6 +105,16 @@ protected:
     virtual void            do_splat(void* dest, const void* item, size_t num) const = 0;
     virtual void            do_move_forward(void* dest, const void* from, size_t num) const = 0;
     virtual void            do_move_backward(void* dest, const void* from, size_t num) const = 0;
+
+    // take care of FBC...
+    virtual void            reservedVectorImpl1();
+    virtual void            reservedVectorImpl2();
+    virtual void            reservedVectorImpl3();
+    virtual void            reservedVectorImpl4();
+    virtual void            reservedVectorImpl5();
+    virtual void            reservedVectorImpl6();
+    virtual void            reservedVectorImpl7();
+    virtual void            reservedVectorImpl8();
     
 private:
         void* _grow(size_t where, size_t amount);
@@ -156,6 +166,16 @@ public:
 protected:
     virtual int             do_compare(const void* lhs, const void* rhs) const = 0;
 
+    // take care of FBC...
+    virtual void            reservedSortedVectorImpl1();
+    virtual void            reservedSortedVectorImpl2();
+    virtual void            reservedSortedVectorImpl3();
+    virtual void            reservedSortedVectorImpl4();
+    virtual void            reservedSortedVectorImpl5();
+    virtual void            reservedSortedVectorImpl6();
+    virtual void            reservedSortedVectorImpl7();
+    virtual void            reservedSortedVectorImpl8();
+
 private:
             ssize_t         _indexOrderOf(const void* item, size_t* order = 0) const;
 
diff --git a/libutils/VectorImpl.cpp b/libutils/VectorImpl.cpp
index e8d40ed..a71970a 100644
--- a/libutils/VectorImpl.cpp
+++ b/libutils/VectorImpl.cpp
@@ -556,6 +556,15 @@ void VectorImpl::_do_move_backward(void* dest, const void* from, size_t num) con
     do_move_backward(dest, from, num);
 }
 
+void VectorImpl::reservedVectorImpl1() { }
+void VectorImpl::reservedVectorImpl2() { }
+void VectorImpl::reservedVectorImpl3() { }
+void VectorImpl::reservedVectorImpl4() { }
+void VectorImpl::reservedVectorImpl5() { }
+void VectorImpl::reservedVectorImpl6() { }
+void VectorImpl::reservedVectorImpl7() { }
+void VectorImpl::reservedVectorImpl8() { }
+
 /*****************************************************************************/
 
 SortedVectorImpl::SortedVectorImpl(size_t itemSize, uint32_t flags)
@@ -675,6 +684,16 @@ ssize_t SortedVectorImpl::remove(const void* item)
     return i;
 }
 
+void SortedVectorImpl::reservedSortedVectorImpl1() { };
+void SortedVectorImpl::reservedSortedVectorImpl2() { };
+void SortedVectorImpl::reservedSortedVectorImpl3() { };
+void SortedVectorImpl::reservedSortedVectorImpl4() { };
+void SortedVectorImpl::reservedSortedVectorImpl5() { };
+void SortedVectorImpl::reservedSortedVectorImpl6() { };
+void SortedVectorImpl::reservedSortedVectorImpl7() { };
+void SortedVectorImpl::reservedSortedVectorImpl8() { };
+
+
 /*****************************************************************************/
 
 }; // namespace android
-- 
2.9.2


From cdcfb3515cd3ec581a88147d1ebeecaebc643fd7 Mon Sep 17 00:00:00 2001
From: codeworkx <codeworkx@cyanogenmod.org>
Date: Sat, 27 Jul 2013 08:18:42 +0200
Subject: [PATCH 2/8] libutils: refbase: jellybean mr1 compat

Change-Id: Ideee0c3814a17b47f70fd612d27067fe19ae698d
---
 include/utils/RefBase.h | 7 +++++++
 libutils/RefBase.cpp    | 5 +++++
 2 files changed, 12 insertions(+)

diff --git a/include/utils/RefBase.h b/include/utils/RefBase.h
index 14d9cb1..f9b5295 100644
--- a/include/utils/RefBase.h
+++ b/include/utils/RefBase.h
@@ -53,6 +53,13 @@ inline bool operator _op_ (const U* o) const {                  \
 
 // ---------------------------------------------------------------------------
 
+class ReferenceConverterBase {
+public:
+    virtual size_t getReferenceTypeSize() const = 0;
+    virtual void* getReferenceBase(void const*) const = 0;
+    inline virtual ~ReferenceConverterBase() { }
+};
+
 class ReferenceRenamer {
 protected:
     // destructor is purposedly not virtual so we avoid code overhead from
diff --git a/libutils/RefBase.cpp b/libutils/RefBase.cpp
index 085b314..313a97f 100644
--- a/libutils/RefBase.cpp
+++ b/libutils/RefBase.cpp
@@ -717,6 +717,11 @@ void RefBase::onLastWeakRef(const void* /*id*/)
 
 // ---------------------------------------------------------------------------
 
+extern "C" void _ZN7android7RefBase14moveReferencesEPvPKvjRKNS_22ReferenceConverterBaseE(void* /*dst*/, void const* /*src*/, size_t /*n*/,
+        const ReferenceConverterBase& /*caster*/)
+{
+}
+
 #if DEBUG_REFS
 void RefBase::renameRefs(size_t n, const ReferenceRenamer& renamer) {
     for (size_t i=0 ; i<n ; i++) {
-- 
2.9.2


From 50f378b98bcbde62251f22efb97452ed82aa81b3 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 17 Dec 2011 17:26:54 -0500
Subject: [PATCH 3/8] init: add detection of charging mode

Based on Prashant Somashekar's patch which is in turn based on techomancer's
patch http://goo.gl/I19GG.

When BOARD_CHARGING_MODE_BOOTING_LPM is set, init will read that
value (usually from /sys) and enable charging mode when set to 1.

This differs from the original patch in that Samsung-specific lpm.rc
is not loaded, but instead, init.rc is loaded using the "charger" class,
which is how AOSP devices handle charging.

The change is because the either the SELinux or the init.rc changes is
causing lpm.rc to not work, and porting lpm.rc to the Android system
is easier than trying to fix it.

Change-Id: Ice7a074da7e982f9a64aaa97de28bfcbccdc8b91

Conflicts:
	init/init.c
---
 init/Android.mk |  8 ++++++++
 init/init.cpp   | 20 +++++++++++++++++++-
 2 files changed, 27 insertions(+), 1 deletion(-)

diff --git a/init/Android.mk b/init/Android.mk
index 7aa3c3f..aae3bc8 100644
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -72,6 +72,14 @@ LOCAL_SRC_FILES:= \
     ueventd_parser.cpp \
     watchdogd.cpp \
 
+SYSTEM_CORE_INIT_DEFINES := BOARD_CHARGING_MODE_BOOTING_LPM
+
+$(foreach system_core_init_define,$(SYSTEM_CORE_INIT_DEFINES), \
+  $(if $($(system_core_init_define)), \
+    $(eval LOCAL_CFLAGS += -D$(system_core_init_define)=\"$($(system_core_init_define))\") \
+  ) \
+)
+
 LOCAL_MODULE:= init
 LOCAL_C_INCLUDES += \
     system/extras/ext4_utils \
diff --git a/init/init.cpp b/init/init.cpp
index 78c33d5..fd71260 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -448,6 +448,24 @@ static void selinux_initialize(bool in_kernel_domain) {
     }
 }
 
+static int charging_mode_booting(void) {
+#ifndef BOARD_CHARGING_MODE_BOOTING_LPM
+    return 0;
+#else
+    int f;
+    char cmb;
+    f = open(BOARD_CHARGING_MODE_BOOTING_LPM, O_RDONLY);
+    if (f < 0)
+        return 0;
+
+    if (1 != read(f, (void *)&cmb,1))
+        return 0;
+
+    close(f);
+    return ('1' == cmb);
+#endif
+}
+
 int main(int argc, char** argv) {
     if (!strcmp(basename(argv[0]), "ueventd")) {
         return ueventd_main(argc, argv);
@@ -572,7 +590,7 @@ int main(int argc, char** argv) {
 
     // Don't mount filesystems or start core system services in charger mode.
     std::string bootmode = property_get("ro.bootmode");
-    if (bootmode == "charger") {
+    if (bootmode == "charger" || charging_mode_booting()) {
         am.QueueEventTrigger("charger");
     } else {
         am.QueueEventTrigger("late-init");
-- 
2.9.2


From eb36f4270b24bc70e03a6578c04b4f1cc7b9ce21 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 14 Mar 2015 10:48:07 +0700
Subject: [PATCH 4/8] disable recovery flash

We don't want to flash AOSP's recovery

Change-Id: Icb999b58879f71f39b64b6e85afc5869c2e7d92e
---
 rootdir/init.rc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/rootdir/init.rc b/rootdir/init.rc
index a359713..94ecbb8 100644
--- a/rootdir/init.rc
+++ b/rootdir/init.rc
@@ -604,6 +604,6 @@ on property:ro.debuggable=1
     chmod 0773 /data/misc/trace
     start console
 
-service flash_recovery /system/bin/install-recovery.sh
-    class main
-    oneshot
+# service flash_recovery /system/bin/install-recovery.sh
+#     class main
+#     oneshot
-- 
2.9.2


From 9c387b36386ad44837b040e49a534d43f261c750 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Fri, 12 Apr 2013 11:40:15 +0700
Subject: [PATCH 5/8] libnetutils: add ifc_set_mtu

Change-Id: I3031e9ee38583648350f2c46baa7a9a714b9ea1e
---
 libnetutils/ifc_utils.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/libnetutils/ifc_utils.c b/libnetutils/ifc_utils.c
index eae32ce..58d0774 100644
--- a/libnetutils/ifc_utils.c
+++ b/libnetutils/ifc_utils.c
@@ -729,3 +729,19 @@ ifc_configure(const char *ifname,
 
     return 0;
 }
+
+// Required for Broadcom RILD
+int ifc_set_mtu(const char *name, int mtuSz)
+{
+    struct ifreq ifr;
+    int ret;
+    ifc_init_ifr(name, &ifr);
+    ifr.ifr_mtu = mtuSz;
+
+    ret = ioctl(ifc_ctl_sock, SIOCSIFMTU, &ifr);
+    if (ret < 0) {
+        printerr("ifc_set_mtu: SIOCSIFMTU failed: %d\n", ret);
+    }
+
+    return ret;
+}
-- 
2.9.2


From 3c481cfc7c53f808d745584923907f27761dfdf6 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Tue, 18 Nov 2014 22:36:32 +0700
Subject: [PATCH 6/8] charger: allow home button to wake

A squashed commit of the following:

commit 6ce21d726a967b2cc942476758b9ab3851ff39f1
Author: Pawit Pornkitprasan <p.pawit@gmail.com>
Date:   Sun Feb 3 22:21:32 2013 +0700

    charger: do not suspend when handling home

    When using Google's suspend implementation, home press should also wake
    the device from suspend

    Change-Id: I51f3e45c5cb418b0b3718e7223a1336876379043

commit 75a7cf84df719d8cf5cd77093b3f9fee3c09017e
Author: Pawit Pornkitprasan <p.pawit@gmail.com>
Date:   Sat Jul 21 22:09:37 2012 +0700

    charger: allow home button to wake

    On certain devices (e.g. galaxysmtd), the user expects the physical
    home button to be able to wake the device as well as the power button.

    Change-Id: If764f36aba3810dfa5233af8baf0a740b04889e0

Change-Id: I362b227e26bc864a2cad471df799bce2d682ecee
---
 healthd/healthd_mode_charger.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/healthd/healthd_mode_charger.cpp b/healthd/healthd_mode_charger.cpp
index 5846626..1c3b2a8 100644
--- a/healthd/healthd_mode_charger.cpp
+++ b/healthd/healthd_mode_charger.cpp
@@ -547,6 +547,11 @@ static void process_key(struct charger *charger, int code, int64_t now)
                 kick_animation(charger->batt_anim);
             }
         }
+    } else {
+        if (key->pending) {
+            request_suspend(false);
+            kick_animation(charger->batt_anim);
+        }
     }
 
     key->pending = false;
@@ -555,6 +560,7 @@ static void process_key(struct charger *charger, int code, int64_t now)
 static void handle_input_state(struct charger *charger, int64_t now)
 {
     process_key(charger, KEY_POWER, now);
+    process_key(charger, KEY_HOME, now);
 
     if (charger->next_key_check != -1 && now > charger->next_key_check)
         charger->next_key_check = -1;
-- 
2.9.2


From 626257d9d3416f792b4f6c585504d36a14d0d6fa Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sun, 11 Oct 2015 21:11:25 +0700
Subject: [PATCH 7/8] init: temporarily change SELinux to permissive

---
 init/init.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/init/init.cpp b/init/init.cpp
index fd71260..fd9e30c 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -372,7 +372,7 @@ static void selinux_init_all_handles(void)
 enum selinux_enforcing_status { SELINUX_PERMISSIVE, SELINUX_ENFORCING };
 
 static selinux_enforcing_status selinux_status_from_cmdline() {
-    selinux_enforcing_status status = SELINUX_ENFORCING;
+    selinux_enforcing_status status = SELINUX_PERMISSIVE;
 
     import_kernel_cmdline(false, [&](const std::string& key, const std::string& value, bool in_qemu) {
         if (key == "androidboot.selinux" && value == "permissive") {
-- 
2.9.2


From b471fc53f1c7c7b2fb7abc7b48abe6f2218197de Mon Sep 17 00:00:00 2001
From: ghsr <ghsr92@yandex.ru>
Date: Sun, 10 Jul 2016 15:54:27 +0600
Subject: [PATCH 8/8] Revert "<cutils/atomic.h> has been inlined for two years
 now."

This reverts commit 103e8f5608a3aae3f87760cdaf2074d55467ddc5.
---
 libcutils/Android.mk |  1 +
 libcutils/atomic.c   | 26 ++++++++++++++++++++++++++
 2 files changed, 27 insertions(+)
 create mode 100644 libcutils/atomic.c

diff --git a/libcutils/Android.mk b/libcutils/Android.mk
index 822a7d3..0c6e5a1 100644
--- a/libcutils/Android.mk
+++ b/libcutils/Android.mk
@@ -17,6 +17,7 @@ LOCAL_PATH := $(my-dir)
 include $(CLEAR_VARS)
 
 libcutils_common_sources := \
+        atomic.c.arm \
         config_utils.c \
         fs_config.c \
         canned_fs_config.c \
diff --git a/libcutils/atomic.c b/libcutils/atomic.c
new file mode 100644
index 0000000..d34aa00
--- /dev/null
+++ b/libcutils/atomic.c
@@ -0,0 +1,26 @@
+/*
+ * Copyright (C) 2007 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/*
+ * Generate non-inlined versions of android_atomic functions.
+ * Nobody should be using these, but some binary blobs currently (late 2014)
+ * are.
+ * If you read this in 2015 or later, please try to delete this file.
+ */
+
+#define ANDROID_ATOMIC_INLINE
+
+#include <cutils/atomic.h>
-- 
2.9.2

